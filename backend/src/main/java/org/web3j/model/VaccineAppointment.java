package org.web3j.model;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.10.3.
 */
@SuppressWarnings("rawtypes")
public class VaccineAppointment extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b506001600055612822806100256000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637933570c116100715780637933570c1461013d57806386561e0c14610145578063970b916914610158578063c1ebebdc1461016b578063d230031014610173578063fa88ab8214610186576100b4565b806306ec91e0146100b95780630d943da2146100e2578063274894d7146100e25780634095b117146101025780635ea83bb01461011757806365ebbe9b1461012a575b600080fd5b6100cc6100c73660046120eb565b610199565b6040516100d9919061246c565b60405180910390f35b6100f56100f0366004612231565b610674565b6040516100d991906126b3565b610115610110366004612231565b6109a8565b005b6100cc6101253660046120eb565b610a82565b610115610138366004612249565b610f51565b6100cc611065565b610115610153366004612170565b611446565b610115610166366004612231565b611696565b6101156117b4565b6100cc610181366004612135565b6118a5565b61011561019436600461210c565b611d82565b60606000805b60025481101561022657836001600160a01b031660016000600284815481106101d857634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483528201929092526040019020600201546001600160a01b031614156102145781610210816127af565b9250505b8061021e816127af565b91505061019f565b5060008167ffffffffffffffff81111561025057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561028957816020015b610276611ed5565b81526020019060019003908161026e5790505b5090506000805b60025481101561066857856001600160a01b031660016000600284815481106102c957634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483528201929092526040019020600201546001600160a01b0316141561065657600160006002838154811061031c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020604051806101400160405290816000820154815260200160018201805461035b90612774565b80601f016020809104026020016040519081016040528092919081815260200182805461038790612774565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b505050918352505060028201546001600160a01b039081166020830152600383015481166040830152600483015416606082015260058201805460809092019161041d90612774565b80601f016020809104026020016040519081016040528092919081815260200182805461044990612774565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b505050505081526020016006820180546104af90612774565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90612774565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050815260200160078201805461054190612774565b80601f016020809104026020016040519081016040528092919081815260200182805461056d90612774565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050918352505060088201546020820152600982015460409091019060ff1660048111156105f957634e487b7160e01b600052602160045260246000fd5b600481111561061857634e487b7160e01b600052602160045260246000fd5b8152505083838151811061063c57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508180610652906127af565b9250505b80610660816127af565b915050610290565b5090925050505b919050565b61067c611ed5565b6000828152600160205260409020546106b05760405162461bcd60e51b81526004016106a79061267c565b60405180910390fd5b60008281526001602081815260409283902083516101408101909452805484529182018054918401916106e290612774565b80601f016020809104026020016040519081016040528092919081815260200182805461070e90612774565b801561075b5780601f106107305761010080835404028352916020019161075b565b820191906000526020600020905b81548152906001019060200180831161073e57829003601f168201915b505050918352505060028201546001600160a01b03908116602083015260038301548116604083015260048301541660608201526005820180546080909201916107a490612774565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090612774565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b5050505050815260200160068201805461083690612774565b80601f016020809104026020016040519081016040528092919081815260200182805461086290612774565b80156108af5780601f10610884576101008083540402835291602001916108af565b820191906000526020600020905b81548152906001019060200180831161089257829003601f168201915b505050505081526020016007820180546108c890612774565b80601f01602080910402602001604051908101604052809291908181526020018280546108f490612774565b80156109415780601f1061091657610100808354040283529160200191610941565b820191906000526020600020905b81548152906001019060200180831161092457829003601f168201915b505050918352505060088201546020820152600982015460409091019060ff16600481111561098057634e487b7160e01b600052602160045260246000fd5b600481111561099f57634e487b7160e01b600052602160045260246000fd5b90525092915050565b6000818152600160205260409020546109d35760405162461bcd60e51b81526004016106a79061267c565b600160008281526001602052604090206009015460ff166004811115610a0957634e487b7160e01b600052602160045260246000fd5b14610a265760405162461bcd60e51b81526004016106a7906124cc565b60008181526001602052604090819020600901805460ff1916600290811790915590517f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a91610a7791849190612754565b60405180910390a150565b60606000805b600254811015610b0f57836001600160a01b03166001600060028481548110610ac157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483528201929092526040019020600301546001600160a01b03161415610afd5781610af9816127af565b9250505b80610b07816127af565b915050610a88565b5060008167ffffffffffffffff811115610b3957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b7257816020015b610b5f611ed5565b815260200190600190039081610b575790505b5090506000805b60025481101561066857856001600160a01b03166001600060028481548110610bb257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483528201929092526040019020600301546001600160a01b03161415610f3f576001600060028381548110610c0557634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518061014001604052908160008201548152602001600182018054610c4490612774565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7090612774565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b505050918352505060028201546001600160a01b0390811660208301526003830154811660408301526004830154166060820152600582018054608090920191610d0690612774565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3290612774565b8015610d7f5780601f10610d5457610100808354040283529160200191610d7f565b820191906000526020600020905b815481529060010190602001808311610d6257829003601f168201915b50505050508152602001600682018054610d9890612774565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc490612774565b8015610e115780601f10610de657610100808354040283529160200191610e11565b820191906000526020600020905b815481529060010190602001808311610df457829003601f168201915b50505050508152602001600782018054610e2a90612774565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5690612774565b8015610ea35780601f10610e7857610100808354040283529160200191610ea3565b820191906000526020600020905b815481529060010190602001808311610e8657829003601f168201915b505050918352505060088201546020820152600982015460409091019060ff166004811115610ee257634e487b7160e01b600052602160045260246000fd5b6004811115610f0157634e487b7160e01b600052602160045260246000fd5b81525050838381518110610f2557634e487b7160e01b600052603260045260246000fd5b60200260200101819052508180610f3b906127af565b9250505b80610f49816127af565b915050610b79565b600083815260016020526040902054610f7c5760405162461bcd60e51b81526004016106a79061267c565b60008381526001602052604081206009015460ff166004811115610fb057634e487b7160e01b600052602160045260246000fd5b14610fcd5760405162461bcd60e51b81526004016106a7906125e5565b60008381526001602081905260409091206003810180546001600160a01b038087166001600160a01b03199283161790925560048301805492861692909116919091179055600901805460ff1916828002179055507fed654e7600f50293230df243f4fb401fdbd5620f54aa379ef96a58e5ed85e938838383600160405161105894939291906126c6565b60405180910390a1505050565b60025460609060009067ffffffffffffffff81111561109457634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156110cd57816020015b6110ba611ed5565b8152602001906001900390816110b25790505b50905060005b60025481101561144057600160006002838154811061110257634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020604051806101400160405290816000820154815260200160018201805461114190612774565b80601f016020809104026020016040519081016040528092919081815260200182805461116d90612774565b80156111ba5780601f1061118f576101008083540402835291602001916111ba565b820191906000526020600020905b81548152906001019060200180831161119d57829003601f168201915b505050918352505060028201546001600160a01b039081166020830152600383015481166040830152600483015416606082015260058201805460809092019161120390612774565b80601f016020809104026020016040519081016040528092919081815260200182805461122f90612774565b801561127c5780601f106112515761010080835404028352916020019161127c565b820191906000526020600020905b81548152906001019060200180831161125f57829003601f168201915b5050505050815260200160068201805461129590612774565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190612774565b801561130e5780601f106112e35761010080835404028352916020019161130e565b820191906000526020600020905b8154815290600101906020018083116112f157829003601f168201915b5050505050815260200160078201805461132790612774565b80601f016020809104026020016040519081016040528092919081815260200182805461135390612774565b80156113a05780601f10611375576101008083540402835291602001916113a0565b820191906000526020600020905b81548152906001019060200180831161138357829003601f168201915b505050918352505060088201546020820152600982015460409091019060ff1660048111156113df57634e487b7160e01b600052602160045260246000fd5b60048111156113fe57634e487b7160e01b600052602160045260246000fd5b8152505082828151811061142257634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080611438906127af565b9150506110d3565b50905090565b6001600160a01b03821661146c5760405162461bcd60e51b81526004016106a790612514565b600080549050604051806101400160405280828152602001888152602001846001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001878152602001868152602001858152602001838152602001600060048111156114f257634e487b7160e01b600052602160045260246000fd5b9052600082815260016020818152604090922083518155838301518051919361152093850192910190611f61565b5060408201516002820180546001600160a01b039283166001600160a01b0319918216179091556060840151600384018054918416918316919091179055608084015160048401805491909316911617905560a0820151805161158d916005840191602090910190611f61565b5060c082015180516115a9916006840191602090910190611f61565b5060e082015180516115c5916007840191602090910190611f61565b50610100820151600882015561012082015160098201805460ff1916600183600481111561160357634e487b7160e01b600052602160045260246000fd5b0217905550506002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01839055805491508061164b836127af565b91905055507fd5b2987aecf4025d6b5dec1a8ef9317f1a8d56ebf7d11e01dcdc3bc5e3c3e9f28184888560405161168594939291906126fa565b60405180910390a150505050505050565b6000818152600160205260409020546116c15760405162461bcd60e51b81526004016106a79061267c565b600360008281526001602052604090206009015460ff1660048111156116f757634e487b7160e01b600052602160045260246000fd5b146117145760405162461bcd60e51b81526004016106a79061262a565b6000818152600160205260409081902060098101805460ff19166004179055600281015460089091015491517f1a3447ac2b4bc6d6c0bc5c2a79a4d9afd1a30245770962face4cc2bdbf09451e9261177a9285926001600160a01b039091169190612735565b60405180910390a17f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a816004604051610a77929190612754565b600160009081555b6002548110156118965760016000600283815481106117eb57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060008082016000905560018201600061181d9190611fe5565b6002820180546001600160a01b0319908116909155600383018054821690556004830180549091169055611855600583016000611fe5565b611863600683016000611fe5565b611871600783016000611fe5565b5060006008820155600901805460ff191690558061188e816127af565b9150506117bc565b506118a360026000612024565b565b60606000805b60025481101561193957838051906020012060016000600284815481106118e257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060050160405161190b91906123d1565b604051809103902014156119275781611923816127af565b9250505b80611931816127af565b9150506118ab565b5060008167ffffffffffffffff81111561196357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561199c57816020015b611989611ed5565b8152602001906001900390816119815790505b5090506000805b60025481101561066857858051906020012060016000600284815481106119da57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600501604051611a0391906123d1565b60405180910390201415611d70576001600060028381548110611a3657634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000206040518061014001604052908160008201548152602001600182018054611a7590612774565b80601f0160208091040260200160405190810160405280929190818152602001828054611aa190612774565b8015611aee5780601f10611ac357610100808354040283529160200191611aee565b820191906000526020600020905b815481529060010190602001808311611ad157829003601f168201915b505050918352505060028201546001600160a01b0390811660208301526003830154811660408301526004830154166060820152600582018054608090920191611b3790612774565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6390612774565b8015611bb05780601f10611b8557610100808354040283529160200191611bb0565b820191906000526020600020905b815481529060010190602001808311611b9357829003601f168201915b50505050508152602001600682018054611bc990612774565b80601f0160208091040260200160405190810160405280929190818152602001828054611bf590612774565b8015611c425780601f10611c1757610100808354040283529160200191611c42565b820191906000526020600020905b815481529060010190602001808311611c2557829003601f168201915b50505050508152602001600782018054611c5b90612774565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8790612774565b8015611cd45780601f10611ca957610100808354040283529160200191611cd4565b820191906000526020600020905b815481529060010190602001808311611cb757829003601f168201915b505050918352505060088201546020820152600982015460409091019060ff166004811115611d1357634e487b7160e01b600052602160045260246000fd5b6004811115611d3257634e487b7160e01b600052602160045260246000fd5b81525050838381518110611d5657634e487b7160e01b600052603260045260246000fd5b60200260200101819052508180611d6c906127af565b9250505b80611d7a816127af565b9150506119a3565b600081815260016020526040902054611dad5760405162461bcd60e51b81526004016106a79061267c565b60008181526001602052604081206009015460ff166004811115611de157634e487b7160e01b600052602160045260246000fd5b1480611e205750600160008281526001602052604090206009015460ff166004811115611e1e57634e487b7160e01b600052602160045260246000fd5b145b611e3c5760405162461bcd60e51b81526004016106a790612592565b6000818152600160205260409020600201546001600160a01b03838116911614611e785760405162461bcd60e51b81526004016106a79061254b565b60008181526001602052604090819020600901805460ff1916600390811790915590517f2da7b23ca63c1eb969eee5fae4acb98186abecf5358b0354a82a5183ebca6b2a91611ec991849190612754565b60405180910390a15050565b604051806101400160405280600081526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001606081526020016000815260200160006004811115611f5c57634e487b7160e01b600052602160045260246000fd5b905290565b828054611f6d90612774565b90600052602060002090601f016020900481019282611f8f5760008555611fd5565b82601f10611fa857805160ff1916838001178555611fd5565b82800160010185558215611fd5579182015b82811115611fd5578251825591602001919060010190611fba565b50611fe192915061203e565b5090565b508054611ff190612774565b6000825580601f106120035750612021565b601f016020900490600052602060002090810190612021919061203e565b50565b508054600082559060005260206000209081019061202191905b5b80821115611fe1576000815560010161203f565b80356001600160a01b038116811461066f57600080fd5b600082601f83011261207a578081fd5b813567ffffffffffffffff80821115612095576120956127d6565b604051601f8301601f1916810160200182811182821017156120b9576120b96127d6565b6040528281528483016020018610156120d0578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156120fc578081fd5b61210582612053565b9392505050565b6000806040838503121561211e578081fd5b61212783612053565b946020939093013593505050565b600060208284031215612146578081fd5b813567ffffffffffffffff81111561215c578182fd5b6121688482850161206a565b949350505050565b60008060008060008060c08789031215612188578182fd5b863567ffffffffffffffff8082111561219f578384fd5b6121ab8a838b0161206a565b975060208901359150808211156121c0578384fd5b6121cc8a838b0161206a565b965060408901359150808211156121e1578384fd5b6121ed8a838b0161206a565b95506060890135915080821115612202578384fd5b5061220f89828a0161206a565b93505061221e60808801612053565b915060a087013590509295509295509295565b600060208284031215612242578081fd5b5035919050565b60008060006060848603121561225d578283fd5b8335925061226d60208501612053565b915061227b60408501612053565b90509250925092565b6001600160a01b03169052565b600581106122af57634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452815b818110156122d8576020818501810151868301820152016122bc565b818111156122e95782602083870101525b50601f01601f19169290920160200192915050565b600061014082518452602083015181602086015261231e828601826122b3565b91505060408301516123336040860182612284565b5060608301516123466060860182612284565b5060808301516123596080860182612284565b5060a083015184820360a086015261237182826122b3565b91505060c083015184820360c086015261238b82826122b3565b91505060e083015184820360e08601526123a582826122b3565b915050610100808401518186015250610120808401516123c782870182612291565b5090949350505050565b81546000908190600281046001808316806123ed57607f831692505b602080841082141561240d57634e487b7160e01b87526022600452602487fd5b81801561242157600181146124325761245e565b60ff1986168952848901965061245e565b61243b8a612768565b885b868110156124565781548b82015290850190830161243d565b505084890196505b509498975050505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156124bf57603f198886030184526124ad8583516122fe565b94509285019290850190600101612491565b5092979650505050505050565b60208082526028908201527f4170706f696e746d656e74206d75737420626520696e2050524f43455353494e604082015267472073746174757360c01b606082015260800190565b60208082526017908201527f496e76616c69642070617469656e742061646472657373000000000000000000604082015260600190565b60208082526027908201527f4f6e6c792070617469656e742063616e2063616e63656c20746865206170706f6040820152661a5b9d1b595b9d60ca1b606082015260800190565b60208082526033908201527f4170706f696e746d656e74206d75737420626520696e2050454e44494e47206f604082015272722050524f43455353494e472073746174757360681b606082015260800190565b60208082526025908201527f4170706f696e746d656e74206d75737420626520696e2050454e44494e472073604082015264746174757360d81b606082015260800190565b60208082526032908201527f4170706f696e746d656e74206d75737420626520696e2043414e43454c4c4544604082015271081cdd185d1d5cc8199bdc881c99599d5b9960721b606082015260800190565b6020808252601a908201527f4170706f696e746d656e7420646f6573206e6f74206578697374000000000000604082015260600190565b60006020825261210560208301846122fe565b8481526001600160a01b03848116602083015283166040820152608081016126f16060830184612291565b95945050505050565b8481526001600160a01b0384166020820152608060408201819052600090612724908301856122b3565b905082606083015295945050505050565b9283526001600160a01b03919091166020830152604082015260600190565b828152604081016121056020830184612291565b60009081526020902090565b60028104600182168061278857607f821691505b602082108114156127a957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127cf57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d03131860a955123d868f1e84aac1d074557f1ee0dc0cbcbf46545353b6a1f9564736f6c63430008000033";

    public static final String FUNC_CREATEAPPOINTMENT = "createAppointment";

    public static final String FUNC_PROCESSAPPOINTMENT = "processAppointment";

    public static final String FUNC_COMPLETEAPPOINTMENT = "completeAppointment";

    public static final String FUNC_CANCELAPPOINTMENT = "cancelAppointment";

    public static final String FUNC_REFUNDAPPOINTMENT = "refundAppointment";

    public static final String FUNC_GETAPPOINTMENT = "getAppointment";

    public static final String FUNC_GETALLAPPOINTMENTS = "getAllAppointments";

    public static final String FUNC_GETAPPOINTMENTSBYPATIENT = "getAppointmentsByPatient";

    public static final String FUNC_GETAPPOINTMENTSBYCENTER = "getAppointmentsByCenter";

    public static final String FUNC_GETAPPOINTMENTSBYDOCTOR = "getAppointmentsByDoctor";

    public static final String FUNC_GETAPPOINTMENTDETAILS = "getAppointmentDetails";

    public static final String FUNC_CLEARALLAPPOINTMENTS = "clearAllAppointments";

    public static final Event APPOINTMENTCREATED_EVENT = new Event("AppointmentCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPOINTMENTREFUNDED_EVENT = new Event("AppointmentRefunded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPOINTMENTUPDATED_EVENT = new Event("AppointmentUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint8>() {}));
    ;

    public static final Event STATUSUPDATED_EVENT = new Event("StatusUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}));
    ;

    @Deprecated
    protected VaccineAppointment(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected VaccineAppointment(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected VaccineAppointment(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected VaccineAppointment(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<AppointmentCreatedEventResponse> getAppointmentCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(APPOINTMENTCREATED_EVENT, transactionReceipt);
        ArrayList<AppointmentCreatedEventResponse> responses = new ArrayList<AppointmentCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AppointmentCreatedEventResponse typedResponse = new AppointmentCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.patientAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.centerName = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.price = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AppointmentCreatedEventResponse getAppointmentCreatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(APPOINTMENTCREATED_EVENT, log);
        AppointmentCreatedEventResponse typedResponse = new AppointmentCreatedEventResponse();
        typedResponse.log = log;
        typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.patientAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.centerName = (String) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.price = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
        return typedResponse;
    }

    public Flowable<AppointmentCreatedEventResponse> appointmentCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAppointmentCreatedEventFromLog(log));
    }

    public Flowable<AppointmentCreatedEventResponse> appointmentCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPOINTMENTCREATED_EVENT));
        return appointmentCreatedEventFlowable(filter);
    }

    public static List<AppointmentRefundedEventResponse> getAppointmentRefundedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(APPOINTMENTREFUNDED_EVENT, transactionReceipt);
        ArrayList<AppointmentRefundedEventResponse> responses = new ArrayList<AppointmentRefundedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AppointmentRefundedEventResponse typedResponse = new AppointmentRefundedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.patientAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.price = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AppointmentRefundedEventResponse getAppointmentRefundedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(APPOINTMENTREFUNDED_EVENT, log);
        AppointmentRefundedEventResponse typedResponse = new AppointmentRefundedEventResponse();
        typedResponse.log = log;
        typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.patientAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.price = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<AppointmentRefundedEventResponse> appointmentRefundedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAppointmentRefundedEventFromLog(log));
    }

    public Flowable<AppointmentRefundedEventResponse> appointmentRefundedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPOINTMENTREFUNDED_EVENT));
        return appointmentRefundedEventFlowable(filter);
    }

    public static List<AppointmentUpdatedEventResponse> getAppointmentUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(APPOINTMENTUPDATED_EVENT, transactionReceipt);
        ArrayList<AppointmentUpdatedEventResponse> responses = new ArrayList<AppointmentUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AppointmentUpdatedEventResponse typedResponse = new AppointmentUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.doctorAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.cashierAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AppointmentUpdatedEventResponse getAppointmentUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(APPOINTMENTUPDATED_EVENT, log);
        AppointmentUpdatedEventResponse typedResponse = new AppointmentUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.doctorAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.cashierAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.status = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
        return typedResponse;
    }

    public Flowable<AppointmentUpdatedEventResponse> appointmentUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAppointmentUpdatedEventFromLog(log));
    }

    public Flowable<AppointmentUpdatedEventResponse> appointmentUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPOINTMENTUPDATED_EVENT));
        return appointmentUpdatedEventFlowable(filter);
    }

    public static List<StatusUpdatedEventResponse> getStatusUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(STATUSUPDATED_EVENT, transactionReceipt);
        ArrayList<StatusUpdatedEventResponse> responses = new ArrayList<StatusUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StatusUpdatedEventResponse typedResponse = new StatusUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newStatus = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static StatusUpdatedEventResponse getStatusUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(STATUSUPDATED_EVENT, log);
        StatusUpdatedEventResponse typedResponse = new StatusUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.appointmentId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.newStatus = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<StatusUpdatedEventResponse> statusUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getStatusUpdatedEventFromLog(log));
    }

    public Flowable<StatusUpdatedEventResponse> statusUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STATUSUPDATED_EVENT));
        return statusUpdatedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createAppointment(String _vaccineName, String _centerName, String _date, String _time, String _patientAddress, BigInteger _price) {
        final Function function = new Function(
                FUNC_CREATEAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_vaccineName), 
                new org.web3j.abi.datatypes.Utf8String(_centerName), 
                new org.web3j.abi.datatypes.Utf8String(_date), 
                new org.web3j.abi.datatypes.Utf8String(_time), 
                new org.web3j.abi.datatypes.Address(160, _patientAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> processAppointment(BigInteger _appointmentId, String _doctorAddress, String _cashierAddress) {
        final Function function = new Function(
                FUNC_PROCESSAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_appointmentId), 
                new org.web3j.abi.datatypes.Address(160, _doctorAddress), 
                new org.web3j.abi.datatypes.Address(160, _cashierAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> completeAppointment(BigInteger _appointmentId) {
        final Function function = new Function(
                FUNC_COMPLETEAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_appointmentId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> cancelAppointment(String _patientAddress, BigInteger _appointmentId) {
        final Function function = new Function(
                FUNC_CANCELAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _patientAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(_appointmentId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> refundAppointment(BigInteger _appointmentId) {
        final Function function = new Function(
                FUNC_REFUNDAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_appointmentId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Appointment> getAppointment(BigInteger _appointmentId) {
        final Function function = new Function(FUNC_GETAPPOINTMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_appointmentId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Appointment>() {}));
        return executeRemoteCallSingleValueReturn(function, Appointment.class);
    }

    public RemoteFunctionCall<List> getAllAppointments() {
        final Function function = new Function(FUNC_GETALLAPPOINTMENTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Appointment>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getAppointmentsByPatient(String _patientAddress) {
        final Function function = new Function(FUNC_GETAPPOINTMENTSBYPATIENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _patientAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Appointment>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getAppointmentsByCenter(String _centerName) {
        final Function function = new Function(FUNC_GETAPPOINTMENTSBYCENTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_centerName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Appointment>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getAppointmentsByDoctor(String _doctorAddress) {
        final Function function = new Function(FUNC_GETAPPOINTMENTSBYDOCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _doctorAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Appointment>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Appointment> getAppointmentDetails(BigInteger _appointmentId) {
        final Function function = new Function(FUNC_GETAPPOINTMENTDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_appointmentId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Appointment>() {}));
        return executeRemoteCallSingleValueReturn(function, Appointment.class);
    }

    public RemoteFunctionCall<TransactionReceipt> clearAllAppointments() {
        final Function function = new Function(
                FUNC_CLEARALLAPPOINTMENTS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static VaccineAppointment load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new VaccineAppointment(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static VaccineAppointment load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new VaccineAppointment(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static VaccineAppointment load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new VaccineAppointment(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static VaccineAppointment load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new VaccineAppointment(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<VaccineAppointment> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(VaccineAppointment.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<VaccineAppointment> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(VaccineAppointment.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<VaccineAppointment> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(VaccineAppointment.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<VaccineAppointment> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(VaccineAppointment.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Appointment extends DynamicStruct {
        public BigInteger appointmentId;

        public String vaccineName;

        public String patientAddress;

        public String doctorAddress;

        public String cashierAddress;

        public String centerName;

        public String date;

        public String time;

        public BigInteger price;

        public BigInteger status;

        public Appointment(BigInteger appointmentId, String vaccineName, String patientAddress, String doctorAddress, String cashierAddress, String centerName, String date, String time, BigInteger price, BigInteger status) {
            super(new org.web3j.abi.datatypes.generated.Uint256(appointmentId), 
                    new org.web3j.abi.datatypes.Utf8String(vaccineName), 
                    new org.web3j.abi.datatypes.Address(160, patientAddress), 
                    new org.web3j.abi.datatypes.Address(160, doctorAddress), 
                    new org.web3j.abi.datatypes.Address(160, cashierAddress), 
                    new org.web3j.abi.datatypes.Utf8String(centerName), 
                    new org.web3j.abi.datatypes.Utf8String(date), 
                    new org.web3j.abi.datatypes.Utf8String(time), 
                    new org.web3j.abi.datatypes.generated.Uint256(price), 
                    new org.web3j.abi.datatypes.generated.Uint8(status));
            this.appointmentId = appointmentId;
            this.vaccineName = vaccineName;
            this.patientAddress = patientAddress;
            this.doctorAddress = doctorAddress;
            this.cashierAddress = cashierAddress;
            this.centerName = centerName;
            this.date = date;
            this.time = time;
            this.price = price;
            this.status = status;
        }

        public Appointment(Uint256 appointmentId, Utf8String vaccineName, Address patientAddress, Address doctorAddress, Address cashierAddress, Utf8String centerName, Utf8String date, Utf8String time, Uint256 price, Uint8 status) {
            super(appointmentId, vaccineName, patientAddress, doctorAddress, cashierAddress, centerName, date, time, price, status);
            this.appointmentId = appointmentId.getValue();
            this.vaccineName = vaccineName.getValue();
            this.patientAddress = patientAddress.getValue();
            this.doctorAddress = doctorAddress.getValue();
            this.cashierAddress = cashierAddress.getValue();
            this.centerName = centerName.getValue();
            this.date = date.getValue();
            this.time = time.getValue();
            this.price = price.getValue();
            this.status = status.getValue();
        }
    }

    public static class AppointmentCreatedEventResponse extends BaseEventResponse {
        public BigInteger appointmentId;

        public String patientAddress;

        public String centerName;

        public BigInteger price;
    }

    public static class AppointmentRefundedEventResponse extends BaseEventResponse {
        public BigInteger appointmentId;

        public String patientAddress;

        public BigInteger price;
    }

    public static class AppointmentUpdatedEventResponse extends BaseEventResponse {
        public BigInteger appointmentId;

        public String doctorAddress;

        public String cashierAddress;

        public BigInteger status;
    }

    public static class StatusUpdatedEventResponse extends BaseEventResponse {
        public BigInteger appointmentId;

        public BigInteger newStatus;
    }
}
